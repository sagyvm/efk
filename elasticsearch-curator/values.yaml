# Default values for elasticsearch-curator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

cronjob:
  # At 01:00 every day
  schedule: "0 1 * * *"
  annotations: {}
  labels: {}
  concurrencyPolicy: ""
  failedJobsHistoryLimit: "5"
  successfulJobsHistoryLimit: "5"
  jobRestartPolicy: Never
  startingDeadlineSeconds: ""

pod:
  annotations: {}
  labels: {}

rbac:
  # Specifies whether RBAC should be enabled
  enabled: false

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:


psp:
  # Specifies whether a podsecuritypolicy should be created
  create: false

image:
  repository: bitnami/elasticsearch-curator
  tag: 5.8.3
  pullPolicy: IfNotPresent

hooks:
  install: false
  upgrade: false

# run curator in dry-run mode
dryrun: false

command: ["/opt/bitnami/python/bin/curator"]
env: {}

configMaps:
  # Delete indices older than 45 days
  action_file_yml: |-
    ---
      actions:
        1:
          action: snapshot
          description: "snapshot of old indices for elasticsearch logs"
          options:
            disable_action: False
            continue_if_exception: True
            name: <snapshot-elasticsearch-{now-45d{yyyyMMdd}}>
            repository: elasticsearch
            wait_for_completion: True
            max_wait: 3600
            wait_interval: 10
          filters:
          - filtertype: pattern
            kind: prefix
            value: elasticsearch
          - filtertype: age
            source: creation_date
            direction: older
            unit: days
            unit_count: 45

        2:
          action: delete_indices
          description: "deletion of old indices for elasticsearch Logs"
          options:
            disable_action: False
            continue_if_exception: True
            ignore_empty_list: True
          filters:
          - filtertype: pattern
            kind: prefix
            value: elasticsearch
          - filtertype: age
            source: creation_date
            direction: older
            unit: days
            unit_count: 45
  # Having config_yaml WILL override the other config
  config_yml: |-
    ---
    client:
      hosts:
        - elasticsearch-master
      port: 9200
      username: elastic
      password: password
      use_ssl: True
      certificate: /opt/elastic-certificate.pem
      ssl_no_validate: True
      # timeout: 30
      # master_only: False
    logging:
      loglevel: ERROR
      logformat: json


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

priorityClassName: ""

# extraVolumes and extraVolumeMounts allows you to mount other volumes
# Example Use Case: mount ssl certificates when elasticsearch has tls enabled
# extraVolumes:
#   - name: es-certs
#     secret:
#       defaultMode: 420
#       secretName: es-certs
# extraVolumeMounts:
#   - name: es-certs
#     mountPath: /certs
#     readOnly: true

# Add your own init container or uncomment and modify the given example.
extraInitContainers: 
  ## Don't configure S3 repository till Elasticsearch is reachable.
  ## Ensure that it is available at http://elasticsearch:9200
  ##
  # elasticsearch-s3-repository:
  #   image: jwilder/dockerize:latest
  #   imagePullPolicy: "IfNotPresent"
  #   command:
  #   - "/bin/sh"
  #   - "-c"
  #   args:
  #   - |
  #     ES_HOST=elasticsearch
  #     ES_PORT=9200
  #     ES_REPOSITORY=backup
  #     S3_REGION=us-east-1
  #     S3_BUCKET=bucket
  #     S3_BASE_PATH=backup
  #     S3_COMPRESS=true
  #     S3_STORAGE_CLASS=standard
  #     apk add curl --no-cache && \
  #     dockerize -wait http://${ES_HOST}:${ES_PORT} --timeout 120s && \
  #     cat <<EOF | curl -sS -XPUT -H "Content-Type: application/json" -d @- http://${ES_HOST}:${ES_PORT}/_snapshot/${ES_REPOSITORY} \
  #     {
  #       "type": "s3",
  #       "settings": {
  #         "bucket": "${S3_BUCKET}",
  #         "base_path": "${S3_BASE_PATH}",
  #         "region": "${S3_REGION}",
  #         "compress": "${S3_COMPRESS}",
  #         "storage_class": "${S3_STORAGE_CLASS}"
  #       }
  #     }

securityContext:
  runAsUser: 16  # run as cron user instead of root
